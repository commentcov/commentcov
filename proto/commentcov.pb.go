// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.12.4
// source: commentcov-proto/commentcov.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CoverageItem_Scope int32

const (
	CoverageItem_UNKNONW          CoverageItem_Scope = 0
	CoverageItem_FILE             CoverageItem_Scope = 1
	CoverageItem_PUBLIC_MODULE    CoverageItem_Scope = 2
	CoverageItem_PRIVATE_MODULE   CoverageItem_Scope = 3
	CoverageItem_PUBLIC_CLASS     CoverageItem_Scope = 4
	CoverageItem_PRIVATE_CLASS    CoverageItem_Scope = 5
	CoverageItem_PUBLIC_TYPE      CoverageItem_Scope = 6
	CoverageItem_PRIVATE_TYPE     CoverageItem_Scope = 7
	CoverageItem_PUBLIC_FUNCTION  CoverageItem_Scope = 8
	CoverageItem_PRIVATE_FUNCTION CoverageItem_Scope = 9
	CoverageItem_PUBLIC_VARIABLE  CoverageItem_Scope = 10
	CoverageItem_PRIVATE_VARIABLE CoverageItem_Scope = 11
)

// Enum value maps for CoverageItem_Scope.
var (
	CoverageItem_Scope_name = map[int32]string{
		0:  "UNKNONW",
		1:  "FILE",
		2:  "PUBLIC_MODULE",
		3:  "PRIVATE_MODULE",
		4:  "PUBLIC_CLASS",
		5:  "PRIVATE_CLASS",
		6:  "PUBLIC_TYPE",
		7:  "PRIVATE_TYPE",
		8:  "PUBLIC_FUNCTION",
		9:  "PRIVATE_FUNCTION",
		10: "PUBLIC_VARIABLE",
		11: "PRIVATE_VARIABLE",
	}
	CoverageItem_Scope_value = map[string]int32{
		"UNKNONW":          0,
		"FILE":             1,
		"PUBLIC_MODULE":    2,
		"PRIVATE_MODULE":   3,
		"PUBLIC_CLASS":     4,
		"PRIVATE_CLASS":    5,
		"PUBLIC_TYPE":      6,
		"PRIVATE_TYPE":     7,
		"PUBLIC_FUNCTION":  8,
		"PRIVATE_FUNCTION": 9,
		"PUBLIC_VARIABLE":  10,
		"PRIVATE_VARIABLE": 11,
	}
)

func (x CoverageItem_Scope) Enum() *CoverageItem_Scope {
	p := new(CoverageItem_Scope)
	*p = x
	return p
}

func (x CoverageItem_Scope) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CoverageItem_Scope) Descriptor() protoreflect.EnumDescriptor {
	return file_commentcov_proto_commentcov_proto_enumTypes[0].Descriptor()
}

func (CoverageItem_Scope) Type() protoreflect.EnumType {
	return &file_commentcov_proto_commentcov_proto_enumTypes[0]
}

func (x CoverageItem_Scope) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CoverageItem_Scope.Descriptor instead.
func (CoverageItem_Scope) EnumDescriptor() ([]byte, []int) {
	return file_commentcov_proto_commentcov_proto_rawDescGZIP(), []int{2, 0}
}

type Block struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartLine   uint32 `protobuf:"varint,1,opt,name=start_line,json=startLine,proto3" json:"start_line,omitempty"`
	StartColumn uint32 `protobuf:"varint,2,opt,name=start_column,json=startColumn,proto3" json:"start_column,omitempty"`
	EndLine     uint32 `protobuf:"varint,3,opt,name=end_line,json=endLine,proto3" json:"end_line,omitempty"`
	EndColumn   uint32 `protobuf:"varint,4,opt,name=end_column,json=endColumn,proto3" json:"end_column,omitempty"`
}

func (x *Block) Reset() {
	*x = Block{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commentcov_proto_commentcov_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Block) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Block) ProtoMessage() {}

func (x *Block) ProtoReflect() protoreflect.Message {
	mi := &file_commentcov_proto_commentcov_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Block.ProtoReflect.Descriptor instead.
func (*Block) Descriptor() ([]byte, []int) {
	return file_commentcov_proto_commentcov_proto_rawDescGZIP(), []int{0}
}

func (x *Block) GetStartLine() uint32 {
	if x != nil {
		return x.StartLine
	}
	return 0
}

func (x *Block) GetStartColumn() uint32 {
	if x != nil {
		return x.StartColumn
	}
	return 0
}

func (x *Block) GetEndLine() uint32 {
	if x != nil {
		return x.EndLine
	}
	return 0
}

func (x *Block) GetEndColumn() uint32 {
	if x != nil {
		return x.EndColumn
	}
	return 0
}

type Comment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Block   *Block `protobuf:"bytes,1,opt,name=block,proto3" json:"block,omitempty"`
	Comment string `protobuf:"bytes,2,opt,name=comment,proto3" json:"comment,omitempty"`
}

func (x *Comment) Reset() {
	*x = Comment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commentcov_proto_commentcov_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Comment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Comment) ProtoMessage() {}

func (x *Comment) ProtoReflect() protoreflect.Message {
	mi := &file_commentcov_proto_commentcov_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Comment.ProtoReflect.Descriptor instead.
func (*Comment) Descriptor() ([]byte, []int) {
	return file_commentcov_proto_commentcov_proto_rawDescGZIP(), []int{1}
}

func (x *Comment) GetBlock() *Block {
	if x != nil {
		return x.Block
	}
	return nil
}

func (x *Comment) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

type CoverageItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scope          CoverageItem_Scope `protobuf:"varint,1,opt,name=scope,proto3,enum=commentcov.proto.CoverageItem_Scope" json:"scope,omitempty"`
	TargetBlock    *Block             `protobuf:"bytes,2,opt,name=target_block,json=targetBlock,proto3" json:"target_block,omitempty"`
	File           string             `protobuf:"bytes,3,opt,name=file,proto3" json:"file,omitempty"`
	Identifier     string             `protobuf:"bytes,4,opt,name=identifier,proto3" json:"identifier,omitempty"`
	Extension      string             `protobuf:"bytes,5,opt,name=extension,proto3" json:"extension,omitempty"`
	HeaderComments []*Comment         `protobuf:"bytes,6,rep,name=header_comments,json=headerComments,proto3" json:"header_comments,omitempty"`
	InlineComments []*Comment         `protobuf:"bytes,7,rep,name=inline_comments,json=inlineComments,proto3" json:"inline_comments,omitempty"`
}

func (x *CoverageItem) Reset() {
	*x = CoverageItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commentcov_proto_commentcov_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoverageItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoverageItem) ProtoMessage() {}

func (x *CoverageItem) ProtoReflect() protoreflect.Message {
	mi := &file_commentcov_proto_commentcov_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoverageItem.ProtoReflect.Descriptor instead.
func (*CoverageItem) Descriptor() ([]byte, []int) {
	return file_commentcov_proto_commentcov_proto_rawDescGZIP(), []int{2}
}

func (x *CoverageItem) GetScope() CoverageItem_Scope {
	if x != nil {
		return x.Scope
	}
	return CoverageItem_UNKNONW
}

func (x *CoverageItem) GetTargetBlock() *Block {
	if x != nil {
		return x.TargetBlock
	}
	return nil
}

func (x *CoverageItem) GetFile() string {
	if x != nil {
		return x.File
	}
	return ""
}

func (x *CoverageItem) GetIdentifier() string {
	if x != nil {
		return x.Identifier
	}
	return ""
}

func (x *CoverageItem) GetExtension() string {
	if x != nil {
		return x.Extension
	}
	return ""
}

func (x *CoverageItem) GetHeaderComments() []*Comment {
	if x != nil {
		return x.HeaderComments
	}
	return nil
}

func (x *CoverageItem) GetInlineComments() []*Comment {
	if x != nil {
		return x.InlineComments
	}
	return nil
}

type MeasureCoverageIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Files []string `protobuf:"bytes,1,rep,name=files,proto3" json:"files,omitempty"`
}

func (x *MeasureCoverageIn) Reset() {
	*x = MeasureCoverageIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commentcov_proto_commentcov_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeasureCoverageIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeasureCoverageIn) ProtoMessage() {}

func (x *MeasureCoverageIn) ProtoReflect() protoreflect.Message {
	mi := &file_commentcov_proto_commentcov_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeasureCoverageIn.ProtoReflect.Descriptor instead.
func (*MeasureCoverageIn) Descriptor() ([]byte, []int) {
	return file_commentcov_proto_commentcov_proto_rawDescGZIP(), []int{3}
}

func (x *MeasureCoverageIn) GetFiles() []string {
	if x != nil {
		return x.Files
	}
	return nil
}

type MeasureCoverageOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CoverageItems []*CoverageItem `protobuf:"bytes,1,rep,name=coverage_items,json=coverageItems,proto3" json:"coverage_items,omitempty"`
}

func (x *MeasureCoverageOut) Reset() {
	*x = MeasureCoverageOut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commentcov_proto_commentcov_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeasureCoverageOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeasureCoverageOut) ProtoMessage() {}

func (x *MeasureCoverageOut) ProtoReflect() protoreflect.Message {
	mi := &file_commentcov_proto_commentcov_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeasureCoverageOut.ProtoReflect.Descriptor instead.
func (*MeasureCoverageOut) Descriptor() ([]byte, []int) {
	return file_commentcov_proto_commentcov_proto_rawDescGZIP(), []int{4}
}

func (x *MeasureCoverageOut) GetCoverageItems() []*CoverageItem {
	if x != nil {
		return x.CoverageItems
	}
	return nil
}

var File_commentcov_proto_commentcov_proto protoreflect.FileDescriptor

var file_commentcov_proto_commentcov_proto_rawDesc = []byte{
	0x0a, 0x21, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x63, 0x6f, 0x76, 0x2d, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x63, 0x6f, 0x76, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x10, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x63, 0x6f, 0x76, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x83, 0x01, 0x0a, 0x05, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x4c, 0x69, 0x6e, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x6c, 0x75, 0x6d,
	0x6e, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x6e, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x65, 0x6e, 0x64, 0x5f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x22, 0x52, 0x0a, 0x07, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2d, 0x0a, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x63,
	0x6f, 0x76, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x05,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x22,
	0xc6, 0x04, 0x0a, 0x0c, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x49, 0x74, 0x65, 0x6d,
	0x12, 0x3a, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x24, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x63, 0x6f, 0x76, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x2e,
	0x53, 0x63, 0x6f, 0x70, 0x65, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x3a, 0x0a, 0x0c,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x63, 0x6f, 0x76, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x0b, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09,
	0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x42, 0x0a, 0x0f, 0x68, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x63, 0x6f, 0x76,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0e,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x42,
	0x0a, 0x0f, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x63, 0x6f, 0x76, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x0e, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x22, 0xe3, 0x01, 0x0a, 0x05, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07,
	0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x4e, 0x57, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x46, 0x49, 0x4c,
	0x45, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x50, 0x55, 0x42, 0x4c, 0x49, 0x43, 0x5f, 0x4d, 0x4f,
	0x44, 0x55, 0x4c, 0x45, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x50, 0x52, 0x49, 0x56, 0x41, 0x54,
	0x45, 0x5f, 0x4d, 0x4f, 0x44, 0x55, 0x4c, 0x45, 0x10, 0x03, 0x12, 0x10, 0x0a, 0x0c, 0x50, 0x55,
	0x42, 0x4c, 0x49, 0x43, 0x5f, 0x43, 0x4c, 0x41, 0x53, 0x53, 0x10, 0x04, 0x12, 0x11, 0x0a, 0x0d,
	0x50, 0x52, 0x49, 0x56, 0x41, 0x54, 0x45, 0x5f, 0x43, 0x4c, 0x41, 0x53, 0x53, 0x10, 0x05, 0x12,
	0x0f, 0x0a, 0x0b, 0x50, 0x55, 0x42, 0x4c, 0x49, 0x43, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x06,
	0x12, 0x10, 0x0a, 0x0c, 0x50, 0x52, 0x49, 0x56, 0x41, 0x54, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x10, 0x07, 0x12, 0x13, 0x0a, 0x0f, 0x50, 0x55, 0x42, 0x4c, 0x49, 0x43, 0x5f, 0x46, 0x55, 0x4e,
	0x43, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x08, 0x12, 0x14, 0x0a, 0x10, 0x50, 0x52, 0x49, 0x56, 0x41,
	0x54, 0x45, 0x5f, 0x46, 0x55, 0x4e, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x09, 0x12, 0x13, 0x0a,
	0x0f, 0x50, 0x55, 0x42, 0x4c, 0x49, 0x43, 0x5f, 0x56, 0x41, 0x52, 0x49, 0x41, 0x42, 0x4c, 0x45,
	0x10, 0x0a, 0x12, 0x14, 0x0a, 0x10, 0x50, 0x52, 0x49, 0x56, 0x41, 0x54, 0x45, 0x5f, 0x56, 0x41,
	0x52, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x0b, 0x22, 0x29, 0x0a, 0x11, 0x4d, 0x65, 0x61, 0x73,
	0x75, 0x72, 0x65, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x12, 0x14, 0x0a,
	0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x66, 0x69,
	0x6c, 0x65, 0x73, 0x22, 0x5b, 0x0a, 0x12, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x43, 0x6f,
	0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x4f, 0x75, 0x74, 0x12, 0x45, 0x0a, 0x0e, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x63, 0x6f, 0x76, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x0d, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73,
	0x32, 0x70, 0x0a, 0x10, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x63, 0x6f, 0x76, 0x50, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x12, 0x5c, 0x0a, 0x0f, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x43,
	0x6f, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x12, 0x23, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x63, 0x6f, 0x76, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x61, 0x73, 0x75,
	0x72, 0x65, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x1a, 0x24, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x63, 0x6f, 0x76, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x4f,
	0x75, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_commentcov_proto_commentcov_proto_rawDescOnce sync.Once
	file_commentcov_proto_commentcov_proto_rawDescData = file_commentcov_proto_commentcov_proto_rawDesc
)

func file_commentcov_proto_commentcov_proto_rawDescGZIP() []byte {
	file_commentcov_proto_commentcov_proto_rawDescOnce.Do(func() {
		file_commentcov_proto_commentcov_proto_rawDescData = protoimpl.X.CompressGZIP(file_commentcov_proto_commentcov_proto_rawDescData)
	})
	return file_commentcov_proto_commentcov_proto_rawDescData
}

var file_commentcov_proto_commentcov_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_commentcov_proto_commentcov_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_commentcov_proto_commentcov_proto_goTypes = []interface{}{
	(CoverageItem_Scope)(0),    // 0: commentcov.proto.CoverageItem.Scope
	(*Block)(nil),              // 1: commentcov.proto.Block
	(*Comment)(nil),            // 2: commentcov.proto.Comment
	(*CoverageItem)(nil),       // 3: commentcov.proto.CoverageItem
	(*MeasureCoverageIn)(nil),  // 4: commentcov.proto.MeasureCoverageIn
	(*MeasureCoverageOut)(nil), // 5: commentcov.proto.MeasureCoverageOut
}
var file_commentcov_proto_commentcov_proto_depIdxs = []int32{
	1, // 0: commentcov.proto.Comment.block:type_name -> commentcov.proto.Block
	0, // 1: commentcov.proto.CoverageItem.scope:type_name -> commentcov.proto.CoverageItem.Scope
	1, // 2: commentcov.proto.CoverageItem.target_block:type_name -> commentcov.proto.Block
	2, // 3: commentcov.proto.CoverageItem.header_comments:type_name -> commentcov.proto.Comment
	2, // 4: commentcov.proto.CoverageItem.inline_comments:type_name -> commentcov.proto.Comment
	3, // 5: commentcov.proto.MeasureCoverageOut.coverage_items:type_name -> commentcov.proto.CoverageItem
	4, // 6: commentcov.proto.CommentcovPlugin.MeasureCoverage:input_type -> commentcov.proto.MeasureCoverageIn
	5, // 7: commentcov.proto.CommentcovPlugin.MeasureCoverage:output_type -> commentcov.proto.MeasureCoverageOut
	7, // [7:8] is the sub-list for method output_type
	6, // [6:7] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_commentcov_proto_commentcov_proto_init() }
func file_commentcov_proto_commentcov_proto_init() {
	if File_commentcov_proto_commentcov_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_commentcov_proto_commentcov_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Block); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commentcov_proto_commentcov_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Comment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commentcov_proto_commentcov_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoverageItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commentcov_proto_commentcov_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeasureCoverageIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commentcov_proto_commentcov_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeasureCoverageOut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_commentcov_proto_commentcov_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_commentcov_proto_commentcov_proto_goTypes,
		DependencyIndexes: file_commentcov_proto_commentcov_proto_depIdxs,
		EnumInfos:         file_commentcov_proto_commentcov_proto_enumTypes,
		MessageInfos:      file_commentcov_proto_commentcov_proto_msgTypes,
	}.Build()
	File_commentcov_proto_commentcov_proto = out.File
	file_commentcov_proto_commentcov_proto_rawDesc = nil
	file_commentcov_proto_commentcov_proto_goTypes = nil
	file_commentcov_proto_commentcov_proto_depIdxs = nil
}
